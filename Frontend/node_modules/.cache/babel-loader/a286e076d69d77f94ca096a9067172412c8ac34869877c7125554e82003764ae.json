{"ast":null,"code":"var _jsxFileName = \"/Users/jarvis/Library/CloudStorage/OneDrive-IndianaUniversity/sem2/ADT/finalproject/react/Frontend/src/pages/Dashboard.js\",\n  _s = $RefreshSig$();\n// import React, { useContext, useEffect, useState } from \"react\";\n// import Chart from \"react-apexcharts\";\n// import AuthContext from \"../AuthContext\";\n// import { Doughnut } from \"react-chartjs-2\";\n// import { Chart as ChartJS, ArcElement, Tooltip, Legend } from \"chart.js\";\n\n// ChartJS.register(ArcElement, Tooltip, Legend);\n// export const data = {\n//   labels: [\"Apple\", \"Knorr\", \"Shoop\", \"Green\", \"Purple\", \"Orange\"],\n//   datasets: [\n//     {\n//       label: \"# of Votes\",\n//       data: [0, 1, 5, 8, 9, 15],\n//       backgroundColor: [\n//         \"rgba(255, 99, 132, 0.2)\",\n//         \"rgba(54, 162, 235, 0.2)\",\n//         \"rgba(255, 206, 86, 0.2)\",\n//         \"rgba(75, 192, 192, 0.2)\",\n//         \"rgba(153, 102, 255, 0.2)\",\n//         \"rgba(255, 159, 64, 0.2)\",\n//       ],\n//       borderColor: [\n//         \"rgba(255, 99, 132, 1)\",\n//         \"rgba(54, 162, 235, 1)\",\n//         \"rgba(255, 206, 86, 1)\",\n//         \"rgba(75, 192, 192, 1)\",\n//         \"rgba(153, 102, 255, 1)\",\n//         \"rgba(255, 159, 64, 1)\",\n//       ],\n//       borderWidth: 1,\n//     },\n//   ],\n// };\n\n// function Dashboard() {\n//   const [saleAmount, setSaleAmount] = useState(\"\");\n//   const [purchaseAmount, setPurchaseAmount] = useState(\"\");\n//   const [stores, setStores] = useState([]);\n//   const [products, setProducts] = useState([]);\n\n//   const [chart, setChart] = useState({\n//     options: {\n//       chart: {\n//         id: \"basic-bar\",\n//       },\n//       xaxis: {\n//         categories: [\n//           \"Jan\",\n//           \"Feb\",\n//           \"Mar\",\n//           \"Apr\",\n//           \"May\",\n//           \"Jun\",\n//           \"Jul\",\n//           \"Aug\",\n//           \"Sep\",\n//           \"Oct\",\n//           \"Nov\",\n//           \"Dec\",\n//         ],\n//       },\n//     },\n//     series: [\n//       {\n//         name: \"series\",\n//         data: [10, 20, 40, 50, 60, 20, 10, 35, 45, 70, 25, 70],\n//       },\n//     ],\n//   });\n\n//   // Update Chart Data\n//   const updateChartData = (salesData) => {\n//     setChart({\n//       ...chart,\n//       series: [\n//         {\n//           name: \"Monthly Sales Amount\",\n//           data: [...salesData],\n//         },\n//       ],\n//     });\n//   };\n\n//   const authContext = useContext(AuthContext);\n\n//   useEffect(() => {\n//     fetchTotalSaleAmount();\n//     fetchTotalPurchaseAmount();\n//     fetchStoresData();\n//     fetchProductsData();\n//     fetchMonthlySalesData();\n//   }, []);\n\n//   // Fetching total sales amount\n//   const fetchTotalSaleAmount = () => {\n//     fetch(\n//       `http://localhost:4000/api/sales/get/${authContext.user}/totalsaleamount`\n//     )\n//       .then((response) => response.json())\n//       .then((datas) => setSaleAmount(datas.totalSaleAmount));\n//   };\n\n//   // Fetching total purchase amount\n//   const fetchTotalPurchaseAmount = () => {\n//     fetch(\n//       `http://localhost:4000/api/purchase/get/${authContext.user}/totalpurchaseamount`\n//     )\n//       .then((response) => response.json())\n//       .then((datas) => setPurchaseAmount(datas.totalPurchaseAmount));\n//   };\n\n//   // Fetching all stores data\n//   const fetchStoresData = () => {\n//     fetch(`http://localhost:4000/api/store/get/${authContext.user}`)\n//       .then((response) => response.json())\n//       .then((datas) => setStores(datas));\n//   };\n\n//   // Fetching Data of All Products\n//   const fetchProductsData = () => {\n//     fetch(`http://localhost:4000/api/product/get/${authContext.user}`)\n//       .then((response) => response.json())\n//       .then((datas) => setProducts(datas))\n//       .catch((err) => console.log(err));\n//   };\n\n//   // Fetching Monthly Sales\n//   const fetchMonthlySalesData = () => {\n//     fetch(`http://localhost:4000/api/sales/getmonthly`)\n//       .then((response) => response.json())\n//       .then((datas) => updateChartData(datas.salesAmount))\n//       .catch((err) => console.log(err));\n//   };\n\n//   return (\n//     <>\n//       <div className=\"grid grid-cols-1 col-span-12 lg:col-span-10 gap-6 md:grid-cols-3 lg:grid-cols-4  p-4 \">\n//         <article className=\"flex flex-col gap-4 rounded-lg border  border-gray-100 bg-white p-6  \">\n//           <div className=\"inline-flex gap-2 self-end rounded bg-green-100 p-1 text-green-600\">\n//             <svg\n//               xmlns=\"http://www.w3.org/2000/svg\"\n//               className=\"h-4 w-4\"\n//               fill=\"none\"\n//               viewBox=\"0 0 24 24\"\n//               stroke=\"currentColor\"\n//             >\n//               <path\n//                 strokeLinecap=\"round\"\n//                 strokeLinejoin=\"round\"\n//                 strokeWidth=\"2\"\n//                 d=\"M13 7h8m0 0v8m0-8l-8 8-4-4-6 6\"\n//               />\n//             </svg>\n\n//             <span className=\"text-xs font-medium\"> 67.81% </span>\n//           </div>\n\n//           <div>\n//             <strong className=\"block text-sm font-medium text-gray-500\">\n//               Sales\n//             </strong>\n\n//             <p>\n//               <span className=\"text-2xl font-medium text-gray-900\">\n//                 ${saleAmount}\n//               </span>\n\n//               <span className=\"text-xs text-gray-500\"> from $240.94 </span>\n//             </p>\n//           </div>\n//         </article>\n\n//         <article className=\"flex flex-col  gap-4 rounded-lg border border-gray-100 bg-white p-6 \">\n//           <div className=\"inline-flex gap-2 self-end rounded bg-red-100 p-1 text-red-600\">\n//             <svg\n//               xmlns=\"http://www.w3.org/2000/svg\"\n//               className=\"h-4 w-4\"\n//               fill=\"none\"\n//               viewBox=\"0 0 24 24\"\n//               stroke=\"currentColor\"\n//             >\n//               <path\n//                 strokeLinecap=\"round\"\n//                 strokeLinejoin=\"round\"\n//                 strokeWidth=\"2\"\n//                 d=\"M13 17h8m0 0V9m0 8l-8-8-4 4-6-6\"\n//               />\n//             </svg>\n\n//             <span className=\"text-xs font-medium\"> 67.81% </span>\n//           </div>\n\n//           <div>\n//             <strong className=\"block text-sm font-medium text-gray-500\">\n//               Purchase\n//             </strong>\n\n//             <p>\n//               <span className=\"text-2xl font-medium text-gray-900\">\n//                 {\" \"}\n//                 ${purchaseAmount}{\" \"}\n//               </span>\n\n//               <span className=\"text-xs text-gray-500\"> from $404.32 </span>\n//             </p>\n//           </div>\n//         </article>\n//         <article className=\"flex flex-col   gap-4 rounded-lg border border-gray-100 bg-white p-6 \">\n//           <div className=\"inline-flex gap-2 self-end rounded bg-red-100 p-1 text-red-600\">\n//             <svg\n//               xmlns=\"http://www.w3.org/2000/svg\"\n//               className=\"h-4 w-4\"\n//               fill=\"none\"\n//               viewBox=\"0 0 24 24\"\n//               stroke=\"currentColor\"\n//             >\n//               <path\n//                 strokeLinecap=\"round\"\n//                 strokeLinejoin=\"round\"\n//                 strokeWidth=\"2\"\n//                 d=\"M13 17h8m0 0V9m0 8l-8-8-4 4-6-6\"\n//               />\n//             </svg>\n\n//             <span className=\"text-xs font-medium\"> 67.81% </span>\n//           </div>\n\n//           <div>\n//             <strong className=\"block text-sm font-medium text-gray-500\">\n//               Total Products\n//             </strong>\n\n//             <p>\n//               <span className=\"text-2xl font-medium text-gray-900\">\n//                 {\" \"}\n//                 {products.length}{\" \"}\n//               </span>\n\n//               {/* <span className=\"text-xs text-gray-500\"> from $404.32 </span> */}\n//             </p>\n//           </div>\n//         </article>\n//         <article className=\"flex flex-col   gap-4 rounded-lg border border-gray-100 bg-white p-6 \">\n//           <div className=\"inline-flex gap-2 self-end rounded bg-red-100 p-1 text-red-600\">\n//             <svg\n//               xmlns=\"http://www.w3.org/2000/svg\"\n//               className=\"h-4 w-4\"\n//               fill=\"none\"\n//               viewBox=\"0 0 24 24\"\n//               stroke=\"currentColor\"\n//             >\n//               <path\n//                 strokeLinecap=\"round\"\n//                 strokeLinejoin=\"round\"\n//                 strokeWidth=\"2\"\n//                 d=\"M13 17h8m0 0V9m0 8l-8-8-4 4-6-6\"\n//               />\n//             </svg>\n\n//             <span className=\"text-xs font-medium\"> 67.81% </span>\n//           </div>\n\n//           <div>\n//             <strong className=\"block text-sm font-medium text-gray-500\">\n//               Total Stores\n//             </strong>\n\n//             <p>\n//               <span className=\"text-2xl font-medium text-gray-900\">\n//                 {\" \"}\n//                 {stores.length}{\" \"}\n//               </span>\n\n//               {/* <span className=\"text-xs text-gray-500\"> from 0 </span> */}\n//             </p>\n//           </div>\n//         </article>\n//         <div className=\"flex justify-around bg-white rounded-lg py-8 col-span-full justify-center\">\n//           <div>\n//             <Chart\n//               options={chart.options}\n//               series={chart.series}\n//               type=\"bar\"\n//               width=\"500\"\n//             />\n//           </div>\n//           <div>\n//             <Doughnut data={data} />\n//           </div>\n//         </div>\n//       </div>\n//     </>\n//   );\n// }\n\n// export default Dashboard;\n// DashboardPage.js\nimport React, { useState, useEffect } from 'react';\nimport { Bar, Doughnut } from 'react-chartjs-2';\nimport 'chart.js/auto';\nimport Papa from 'papaparse';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst DashboardPage = () => {\n  _s();\n  const [data, setData] = useState({\n    salesData: null,\n    purchaseData: null,\n    productData: null,\n    storeData: null,\n    barChartData: null,\n    doughnutChartData: null\n  });\n  useEffect(() => {\n    // Here we would fetch and parse the CSV data\n    Papa.parse('/path-to-your/medical_supplies.csv', {\n      download: true,\n      header: true,\n      complete: function (results) {\n        const parsedData = results.data;\n        // Process your data here and set it to state variables\n        // For example, let's assume we want to create a bar chart for sales and a doughnut chart for product distribution\n        setData({\n          ...data,\n          salesData: calculateSalesData(parsedData),\n          purchaseData: calculatePurchaseData(parsedData),\n          productData: calculateProductData(parsedData),\n          storeData: calculateStoreData(parsedData),\n          barChartData: generateBarChartData(parsedData),\n          doughnutChartData: generateDoughnutChartData(parsedData)\n        });\n      }\n    });\n  }, []);\n\n  // Define how to calculate and generate chart data from parsed CSV data\n  // Placeholder functions, you need to implement these based on your actual data\n  const calculateSalesData = parsedData => {/* ... */};\n  const calculatePurchaseData = parsedData => {/* ... */};\n  const calculateProductData = parsedData => {/* ... */};\n  const calculateStoreData = parsedData => {/* ... */};\n  const generateBarChartData = parsedData => {/* ... */};\n  const generateDoughnutChartData = parsedData => {/* ... */};\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"row\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"col-md-3\",\n        children: [\"Sales: $\", data.salesData]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 349,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"col-md-3\",\n        children: [\"Purchase: $\", data.purchaseData]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 350,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"col-md-3\",\n        children: [\"Total Products: \", data.productData]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 351,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"col-md-3\",\n        children: [\"Total Stores: \", data.storeData]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 352,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 347,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"row\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"col-md-6\",\n        children: /*#__PURE__*/_jsxDEV(Bar, {\n          data: data.barChartData\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 356,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 355,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"col-md-6\",\n        children: /*#__PURE__*/_jsxDEV(Doughnut, {\n          data: data.doughnutChartData\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 359,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 358,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 354,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 346,\n    columnNumber: 5\n  }, this);\n};\n_s(DashboardPage, \"P6KflpDopirHwZB09ba2WPv2oU4=\");\n_c = DashboardPage;\nexport default DashboardPage;\nvar _c;\n$RefreshReg$(_c, \"DashboardPage\");","map":{"version":3,"names":["React","useState","useEffect","Bar","Doughnut","Papa","jsxDEV","_jsxDEV","DashboardPage","_s","data","setData","salesData","purchaseData","productData","storeData","barChartData","doughnutChartData","parse","download","header","complete","results","parsedData","calculateSalesData","calculatePurchaseData","calculateProductData","calculateStoreData","generateBarChartData","generateDoughnutChartData","className","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/jarvis/Library/CloudStorage/OneDrive-IndianaUniversity/sem2/ADT/finalproject/react/Frontend/src/pages/Dashboard.js"],"sourcesContent":["// import React, { useContext, useEffect, useState } from \"react\";\n// import Chart from \"react-apexcharts\";\n// import AuthContext from \"../AuthContext\";\n// import { Doughnut } from \"react-chartjs-2\";\n// import { Chart as ChartJS, ArcElement, Tooltip, Legend } from \"chart.js\";\n\n// ChartJS.register(ArcElement, Tooltip, Legend);\n// export const data = {\n//   labels: [\"Apple\", \"Knorr\", \"Shoop\", \"Green\", \"Purple\", \"Orange\"],\n//   datasets: [\n//     {\n//       label: \"# of Votes\",\n//       data: [0, 1, 5, 8, 9, 15],\n//       backgroundColor: [\n//         \"rgba(255, 99, 132, 0.2)\",\n//         \"rgba(54, 162, 235, 0.2)\",\n//         \"rgba(255, 206, 86, 0.2)\",\n//         \"rgba(75, 192, 192, 0.2)\",\n//         \"rgba(153, 102, 255, 0.2)\",\n//         \"rgba(255, 159, 64, 0.2)\",\n//       ],\n//       borderColor: [\n//         \"rgba(255, 99, 132, 1)\",\n//         \"rgba(54, 162, 235, 1)\",\n//         \"rgba(255, 206, 86, 1)\",\n//         \"rgba(75, 192, 192, 1)\",\n//         \"rgba(153, 102, 255, 1)\",\n//         \"rgba(255, 159, 64, 1)\",\n//       ],\n//       borderWidth: 1,\n//     },\n//   ],\n// };\n\n// function Dashboard() {\n//   const [saleAmount, setSaleAmount] = useState(\"\");\n//   const [purchaseAmount, setPurchaseAmount] = useState(\"\");\n//   const [stores, setStores] = useState([]);\n//   const [products, setProducts] = useState([]);\n\n//   const [chart, setChart] = useState({\n//     options: {\n//       chart: {\n//         id: \"basic-bar\",\n//       },\n//       xaxis: {\n//         categories: [\n//           \"Jan\",\n//           \"Feb\",\n//           \"Mar\",\n//           \"Apr\",\n//           \"May\",\n//           \"Jun\",\n//           \"Jul\",\n//           \"Aug\",\n//           \"Sep\",\n//           \"Oct\",\n//           \"Nov\",\n//           \"Dec\",\n//         ],\n//       },\n//     },\n//     series: [\n//       {\n//         name: \"series\",\n//         data: [10, 20, 40, 50, 60, 20, 10, 35, 45, 70, 25, 70],\n//       },\n//     ],\n//   });\n\n//   // Update Chart Data\n//   const updateChartData = (salesData) => {\n//     setChart({\n//       ...chart,\n//       series: [\n//         {\n//           name: \"Monthly Sales Amount\",\n//           data: [...salesData],\n//         },\n//       ],\n//     });\n//   };\n\n//   const authContext = useContext(AuthContext);\n\n//   useEffect(() => {\n//     fetchTotalSaleAmount();\n//     fetchTotalPurchaseAmount();\n//     fetchStoresData();\n//     fetchProductsData();\n//     fetchMonthlySalesData();\n//   }, []);\n\n//   // Fetching total sales amount\n//   const fetchTotalSaleAmount = () => {\n//     fetch(\n//       `http://localhost:4000/api/sales/get/${authContext.user}/totalsaleamount`\n//     )\n//       .then((response) => response.json())\n//       .then((datas) => setSaleAmount(datas.totalSaleAmount));\n//   };\n\n//   // Fetching total purchase amount\n//   const fetchTotalPurchaseAmount = () => {\n//     fetch(\n//       `http://localhost:4000/api/purchase/get/${authContext.user}/totalpurchaseamount`\n//     )\n//       .then((response) => response.json())\n//       .then((datas) => setPurchaseAmount(datas.totalPurchaseAmount));\n//   };\n\n//   // Fetching all stores data\n//   const fetchStoresData = () => {\n//     fetch(`http://localhost:4000/api/store/get/${authContext.user}`)\n//       .then((response) => response.json())\n//       .then((datas) => setStores(datas));\n//   };\n\n//   // Fetching Data of All Products\n//   const fetchProductsData = () => {\n//     fetch(`http://localhost:4000/api/product/get/${authContext.user}`)\n//       .then((response) => response.json())\n//       .then((datas) => setProducts(datas))\n//       .catch((err) => console.log(err));\n//   };\n\n//   // Fetching Monthly Sales\n//   const fetchMonthlySalesData = () => {\n//     fetch(`http://localhost:4000/api/sales/getmonthly`)\n//       .then((response) => response.json())\n//       .then((datas) => updateChartData(datas.salesAmount))\n//       .catch((err) => console.log(err));\n//   };\n\n//   return (\n//     <>\n//       <div className=\"grid grid-cols-1 col-span-12 lg:col-span-10 gap-6 md:grid-cols-3 lg:grid-cols-4  p-4 \">\n//         <article className=\"flex flex-col gap-4 rounded-lg border  border-gray-100 bg-white p-6  \">\n//           <div className=\"inline-flex gap-2 self-end rounded bg-green-100 p-1 text-green-600\">\n//             <svg\n//               xmlns=\"http://www.w3.org/2000/svg\"\n//               className=\"h-4 w-4\"\n//               fill=\"none\"\n//               viewBox=\"0 0 24 24\"\n//               stroke=\"currentColor\"\n//             >\n//               <path\n//                 strokeLinecap=\"round\"\n//                 strokeLinejoin=\"round\"\n//                 strokeWidth=\"2\"\n//                 d=\"M13 7h8m0 0v8m0-8l-8 8-4-4-6 6\"\n//               />\n//             </svg>\n\n//             <span className=\"text-xs font-medium\"> 67.81% </span>\n//           </div>\n\n//           <div>\n//             <strong className=\"block text-sm font-medium text-gray-500\">\n//               Sales\n//             </strong>\n\n//             <p>\n//               <span className=\"text-2xl font-medium text-gray-900\">\n//                 ${saleAmount}\n//               </span>\n\n//               <span className=\"text-xs text-gray-500\"> from $240.94 </span>\n//             </p>\n//           </div>\n//         </article>\n\n//         <article className=\"flex flex-col  gap-4 rounded-lg border border-gray-100 bg-white p-6 \">\n//           <div className=\"inline-flex gap-2 self-end rounded bg-red-100 p-1 text-red-600\">\n//             <svg\n//               xmlns=\"http://www.w3.org/2000/svg\"\n//               className=\"h-4 w-4\"\n//               fill=\"none\"\n//               viewBox=\"0 0 24 24\"\n//               stroke=\"currentColor\"\n//             >\n//               <path\n//                 strokeLinecap=\"round\"\n//                 strokeLinejoin=\"round\"\n//                 strokeWidth=\"2\"\n//                 d=\"M13 17h8m0 0V9m0 8l-8-8-4 4-6-6\"\n//               />\n//             </svg>\n\n//             <span className=\"text-xs font-medium\"> 67.81% </span>\n//           </div>\n\n//           <div>\n//             <strong className=\"block text-sm font-medium text-gray-500\">\n//               Purchase\n//             </strong>\n\n//             <p>\n//               <span className=\"text-2xl font-medium text-gray-900\">\n//                 {\" \"}\n//                 ${purchaseAmount}{\" \"}\n//               </span>\n\n//               <span className=\"text-xs text-gray-500\"> from $404.32 </span>\n//             </p>\n//           </div>\n//         </article>\n//         <article className=\"flex flex-col   gap-4 rounded-lg border border-gray-100 bg-white p-6 \">\n//           <div className=\"inline-flex gap-2 self-end rounded bg-red-100 p-1 text-red-600\">\n//             <svg\n//               xmlns=\"http://www.w3.org/2000/svg\"\n//               className=\"h-4 w-4\"\n//               fill=\"none\"\n//               viewBox=\"0 0 24 24\"\n//               stroke=\"currentColor\"\n//             >\n//               <path\n//                 strokeLinecap=\"round\"\n//                 strokeLinejoin=\"round\"\n//                 strokeWidth=\"2\"\n//                 d=\"M13 17h8m0 0V9m0 8l-8-8-4 4-6-6\"\n//               />\n//             </svg>\n\n//             <span className=\"text-xs font-medium\"> 67.81% </span>\n//           </div>\n\n//           <div>\n//             <strong className=\"block text-sm font-medium text-gray-500\">\n//               Total Products\n//             </strong>\n\n//             <p>\n//               <span className=\"text-2xl font-medium text-gray-900\">\n//                 {\" \"}\n//                 {products.length}{\" \"}\n//               </span>\n\n//               {/* <span className=\"text-xs text-gray-500\"> from $404.32 </span> */}\n//             </p>\n//           </div>\n//         </article>\n//         <article className=\"flex flex-col   gap-4 rounded-lg border border-gray-100 bg-white p-6 \">\n//           <div className=\"inline-flex gap-2 self-end rounded bg-red-100 p-1 text-red-600\">\n//             <svg\n//               xmlns=\"http://www.w3.org/2000/svg\"\n//               className=\"h-4 w-4\"\n//               fill=\"none\"\n//               viewBox=\"0 0 24 24\"\n//               stroke=\"currentColor\"\n//             >\n//               <path\n//                 strokeLinecap=\"round\"\n//                 strokeLinejoin=\"round\"\n//                 strokeWidth=\"2\"\n//                 d=\"M13 17h8m0 0V9m0 8l-8-8-4 4-6-6\"\n//               />\n//             </svg>\n\n//             <span className=\"text-xs font-medium\"> 67.81% </span>\n//           </div>\n\n//           <div>\n//             <strong className=\"block text-sm font-medium text-gray-500\">\n//               Total Stores\n//             </strong>\n\n//             <p>\n//               <span className=\"text-2xl font-medium text-gray-900\">\n//                 {\" \"}\n//                 {stores.length}{\" \"}\n//               </span>\n\n//               {/* <span className=\"text-xs text-gray-500\"> from 0 </span> */}\n//             </p>\n//           </div>\n//         </article>\n//         <div className=\"flex justify-around bg-white rounded-lg py-8 col-span-full justify-center\">\n//           <div>\n//             <Chart\n//               options={chart.options}\n//               series={chart.series}\n//               type=\"bar\"\n//               width=\"500\"\n//             />\n//           </div>\n//           <div>\n//             <Doughnut data={data} />\n//           </div>\n//         </div>\n//       </div>\n//     </>\n//   );\n// }\n\n// export default Dashboard;\n// DashboardPage.js\nimport React, { useState, useEffect } from 'react';\nimport { Bar, Doughnut } from 'react-chartjs-2';\nimport 'chart.js/auto';\nimport Papa from 'papaparse';\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\nconst DashboardPage = () => {\n  const [data, setData] = useState({\n    salesData: null,\n    purchaseData: null,\n    productData: null,\n    storeData: null,\n    barChartData: null,\n    doughnutChartData: null,\n  });\n\n  useEffect(() => {\n    // Here we would fetch and parse the CSV data\n    Papa.parse('/path-to-your/medical_supplies.csv', {\n      download: true,\n      header: true,\n      complete: function(results) {\n        const parsedData = results.data;\n        // Process your data here and set it to state variables\n        // For example, let's assume we want to create a bar chart for sales and a doughnut chart for product distribution\n        setData({\n          ...data,\n          salesData: calculateSalesData(parsedData),\n          purchaseData: calculatePurchaseData(parsedData),\n          productData: calculateProductData(parsedData),\n          storeData: calculateStoreData(parsedData),\n          barChartData: generateBarChartData(parsedData),\n          doughnutChartData: generateDoughnutChartData(parsedData),\n        });\n      }\n    });\n  }, []);\n\n  // Define how to calculate and generate chart data from parsed CSV data\n  // Placeholder functions, you need to implement these based on your actual data\n  const calculateSalesData = (parsedData) => { /* ... */ };\n  const calculatePurchaseData = (parsedData) => { /* ... */ };\n  const calculateProductData = (parsedData) => { /* ... */ };\n  const calculateStoreData = (parsedData) => { /* ... */ };\n  const generateBarChartData = (parsedData) => { /* ... */ };\n  const generateDoughnutChartData = (parsedData) => { /* ... */ };\n\n  return (\n    <div className=\"container\">\n      <div className=\"row\">\n        {/* Card Components for Sales, Purchase, etc. */}\n        <div className=\"col-md-3\">Sales: ${data.salesData}</div>\n        <div className=\"col-md-3\">Purchase: ${data.purchaseData}</div>\n        <div className=\"col-md-3\">Total Products: {data.productData}</div>\n        <div className=\"col-md-3\">Total Stores: {data.storeData}</div>\n      </div>\n      <div className=\"row\">\n        <div className=\"col-md-6\">\n          <Bar data={data.barChartData} />\n        </div>\n        <div className=\"col-md-6\">\n          <Doughnut data={data.doughnutChartData} />\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default DashboardPage;\n"],"mappings":";;AAAA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AA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"},"metadata":{},"sourceType":"module","externalDependencies":[]}