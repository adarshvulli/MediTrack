{"ast":null,"code":"// import React, { useState, useEffect, useContext } from \"react\";\n// import AddPurchaseDetails from \"../components/AddPurchaseDetails\";\n// import AuthContext from \"../AuthContext\";\n\n// function PurchaseDetails() {\n//   const [showPurchaseModal, setPurchaseModal] = useState(false);\n//   const [purchase, setAllPurchaseData] = useState([]);\n//   const [products, setAllProducts] = useState([]);\n//   const [updatePage, setUpdatePage] = useState(true);\n\n//   const authContext = useContext(AuthContext);\n\n//   useEffect(() => {\n//     fetchPurchaseData();\n//     fetchProductsData();\n//   }, [updatePage]);\n\n//   // Fetching Data of All Purchase items\n//   const fetchPurchaseData = () => {\n//     fetch(`http://localhost:4000/api/purchase/get/${authContext.user}`)\n//       .then((response) => response.json())\n//       .then((data) => {\n//         setAllPurchaseData(data);\n//       })\n//       .catch((err) => console.log(err));\n//   };\n\n//   // Fetching Data of All Products\n//   const fetchProductsData = () => {\n//     fetch(`http://localhost:4000/api/product/get/${authContext.user}`)\n//       .then((response) => response.json())\n//       .then((data) => {\n//         setAllProducts(data);\n//       })\n//       .catch((err) => console.log(err));\n//   };\n\n//   // Modal for Sale Add\n//   const addSaleModalSetting = () => {\n//     setPurchaseModal(!showPurchaseModal);\n//   };\n\n//   // Handle Page Update\n//   const handlePageUpdate = () => {\n//     setUpdatePage(!updatePage);\n//   };\n\n//   return (\n//     <div className=\"col-span-12 lg:col-span-10  flex justify-center\">\n//       <div className=\" flex flex-col gap-5 w-11/12\">\n//         {showPurchaseModal && (\n//           <AddPurchaseDetails\n//             addSaleModalSetting={addSaleModalSetting}\n//             products={products}\n//             handlePageUpdate={handlePageUpdate}\n//             authContext = {authContext}\n//           />\n//         )}\n//         {/* Table  */}\n//         <div className=\"overflow-x-auto rounded-lg border bg-white border-gray-200 \">\n//           <div className=\"flex justify-between pt-5 pb-3 px-3\">\n//             <div className=\"flex gap-4 justify-center items-center \">\n//               <span className=\"font-bold\">Purchase Details</span>\n//             </div>\n//             <div className=\"flex gap-4\">\n//               <button\n//                 className=\"bg-blue-500 hover:bg-blue-700 text-white font-bold p-2 text-xs  rounded\"\n//                 onClick={addSaleModalSetting}\n//               >\n//                 {/* <Link to=\"/inventory/add-product\">Add Product</Link> */}\n//                 Add Purchase\n//               </button>\n//             </div>\n//           </div>\n//           <table className=\"min-w-full divide-y-2 divide-gray-200 text-sm\">\n//             <thead>\n//               <tr>\n//                 <th className=\"whitespace-nowrap px-4 py-2 text-left font-medium text-gray-900\">\n//                   Product Name\n//                 </th>\n//                 <th className=\"whitespace-nowrap px-4 py-2 text-left font-medium text-gray-900\">\n//                   Quantity Purchased\n//                 </th>\n//                 <th className=\"whitespace-nowrap px-4 py-2 text-left font-medium text-gray-900\">\n//                   Purchase Date\n//                 </th>\n//                 <th className=\"whitespace-nowrap px-4 py-2 text-left font-medium text-gray-900\">\n//                   Total Purchase Amount\n//                 </th>\n//               </tr>\n//             </thead>\n\n//             <tbody className=\"divide-y divide-gray-200\">\n//               {purchase.map((element, index) => {\n//                 return (\n//                   <tr key={element._id}>\n//                     <td className=\"whitespace-nowrap px-4 py-2  text-gray-900\">\n//                       {element.ProductID?.name}\n//                     </td>\n//                     <td className=\"whitespace-nowrap px-4 py-2 text-gray-700\">\n//                       {element.QuantityPurchased}\n//                     </td>\n//                     <td className=\"whitespace-nowrap px-4 py-2 text-gray-700\">\n//                       {new Date(element.PurchaseDate).toLocaleDateString() ==\n//                       new Date().toLocaleDateString()\n//                         ? \"Today\"\n//                         : element.PurchaseDate}\n//                     </td>\n//                     <td className=\"whitespace-nowrap px-4 py-2 text-gray-700\">\n//                       ${element.TotalPurchaseAmount}\n//                     </td>\n//                   </tr>\n//                 );\n//               })}\n//             </tbody>\n//           </table>\n//         </div>\n//       </div>\n//     </div>\n//   );\n// }\n\n// export default PurchaseDetails;","map":{"version":3,"names":[],"sources":["/Users/jarvis/Library/CloudStorage/OneDrive-IndianaUniversity/sem2/ADT/finalproject/react/Frontend/src/pages/PurchaseDetails.js"],"sourcesContent":["// import React, { useState, useEffect, useContext } from \"react\";\n// import AddPurchaseDetails from \"../components/AddPurchaseDetails\";\n// import AuthContext from \"../AuthContext\";\n\n// function PurchaseDetails() {\n//   const [showPurchaseModal, setPurchaseModal] = useState(false);\n//   const [purchase, setAllPurchaseData] = useState([]);\n//   const [products, setAllProducts] = useState([]);\n//   const [updatePage, setUpdatePage] = useState(true);\n\n//   const authContext = useContext(AuthContext);\n\n//   useEffect(() => {\n//     fetchPurchaseData();\n//     fetchProductsData();\n//   }, [updatePage]);\n\n//   // Fetching Data of All Purchase items\n//   const fetchPurchaseData = () => {\n//     fetch(`http://localhost:4000/api/purchase/get/${authContext.user}`)\n//       .then((response) => response.json())\n//       .then((data) => {\n//         setAllPurchaseData(data);\n//       })\n//       .catch((err) => console.log(err));\n//   };\n\n//   // Fetching Data of All Products\n//   const fetchProductsData = () => {\n//     fetch(`http://localhost:4000/api/product/get/${authContext.user}`)\n//       .then((response) => response.json())\n//       .then((data) => {\n//         setAllProducts(data);\n//       })\n//       .catch((err) => console.log(err));\n//   };\n\n//   // Modal for Sale Add\n//   const addSaleModalSetting = () => {\n//     setPurchaseModal(!showPurchaseModal);\n//   };\n\n  \n//   // Handle Page Update\n//   const handlePageUpdate = () => {\n//     setUpdatePage(!updatePage);\n//   };\n\n//   return (\n//     <div className=\"col-span-12 lg:col-span-10  flex justify-center\">\n//       <div className=\" flex flex-col gap-5 w-11/12\">\n//         {showPurchaseModal && (\n//           <AddPurchaseDetails\n//             addSaleModalSetting={addSaleModalSetting}\n//             products={products}\n//             handlePageUpdate={handlePageUpdate}\n//             authContext = {authContext}\n//           />\n//         )}\n//         {/* Table  */}\n//         <div className=\"overflow-x-auto rounded-lg border bg-white border-gray-200 \">\n//           <div className=\"flex justify-between pt-5 pb-3 px-3\">\n//             <div className=\"flex gap-4 justify-center items-center \">\n//               <span className=\"font-bold\">Purchase Details</span>\n//             </div>\n//             <div className=\"flex gap-4\">\n//               <button\n//                 className=\"bg-blue-500 hover:bg-blue-700 text-white font-bold p-2 text-xs  rounded\"\n//                 onClick={addSaleModalSetting}\n//               >\n//                 {/* <Link to=\"/inventory/add-product\">Add Product</Link> */}\n//                 Add Purchase\n//               </button>\n//             </div>\n//           </div>\n//           <table className=\"min-w-full divide-y-2 divide-gray-200 text-sm\">\n//             <thead>\n//               <tr>\n//                 <th className=\"whitespace-nowrap px-4 py-2 text-left font-medium text-gray-900\">\n//                   Product Name\n//                 </th>\n//                 <th className=\"whitespace-nowrap px-4 py-2 text-left font-medium text-gray-900\">\n//                   Quantity Purchased\n//                 </th>\n//                 <th className=\"whitespace-nowrap px-4 py-2 text-left font-medium text-gray-900\">\n//                   Purchase Date\n//                 </th>\n//                 <th className=\"whitespace-nowrap px-4 py-2 text-left font-medium text-gray-900\">\n//                   Total Purchase Amount\n//                 </th>\n//               </tr>\n//             </thead>\n\n//             <tbody className=\"divide-y divide-gray-200\">\n//               {purchase.map((element, index) => {\n//                 return (\n//                   <tr key={element._id}>\n//                     <td className=\"whitespace-nowrap px-4 py-2  text-gray-900\">\n//                       {element.ProductID?.name}\n//                     </td>\n//                     <td className=\"whitespace-nowrap px-4 py-2 text-gray-700\">\n//                       {element.QuantityPurchased}\n//                     </td>\n//                     <td className=\"whitespace-nowrap px-4 py-2 text-gray-700\">\n//                       {new Date(element.PurchaseDate).toLocaleDateString() ==\n//                       new Date().toLocaleDateString()\n//                         ? \"Today\"\n//                         : element.PurchaseDate}\n//                     </td>\n//                     <td className=\"whitespace-nowrap px-4 py-2 text-gray-700\">\n//                       ${element.TotalPurchaseAmount}\n//                     </td>\n//                   </tr>\n//                 );\n//               })}\n//             </tbody>\n//           </table>\n//         </div>\n//       </div>\n//     </div>\n//   );\n// }\n\n// export default PurchaseDetails;\n"],"mappings":"AAAA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAGA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}