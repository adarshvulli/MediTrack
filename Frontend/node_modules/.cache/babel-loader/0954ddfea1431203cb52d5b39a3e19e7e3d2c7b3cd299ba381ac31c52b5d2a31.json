{"ast":null,"code":"var _jsxFileName = \"/Users/jarvis/Library/CloudStorage/OneDrive-IndianaUniversity/sem2/ADT/finalproject/react/Frontend/src/components/QuantityOverTime.js\";\nimport React, { useEffect, useState } from 'react';\nimport { Line } from 'react-chartjs-2';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction QuantityOverTime() {\n  const [labels, setLabels] = useState([]);\n  const [quantities, setQuantities] = useState([]);\n  const [data, setData] = useState(null);\n  const [supplyName, setSupplyName] = useState('Epoetin');\n  const [supplyName1, setSupplyName1] = useState('Epoetin');\n  const [lineData, setLineData] = useState({\n    labels: labels,\n    datasets: [{\n      label: `Quantity Over Time for ${supplyName}`,\n      data: quantities,\n      backgroundColor: 'green',\n      borderColor: 'green',\n      borderWidth: 1\n    }]\n  });\n  const s = () => {\n    // Fetch data from the API\n    fetch(`http://localhost:4012/api/supplies/quantity-over-time?supplyName=${supplyName}`).then(response => {\n      if (!response.ok) {\n        // console.log(\"error\",response)\n        throw new Error(`HTTP error! Status: ${response.status}`);\n      }\n      // console.log(\"success\",response)\n      return response.json();\n    }).then(data => {\n      // Extract labels and quantities from the response data\n      const newLabels = data.map(item => item._id);\n      const newQuantities = data.map(item => item.total_quantity);\n\n      // Update state variables\n      setLabels(newLabels);\n      setQuantities(newQuantities);\n      setLineData({\n        labels: labels,\n        datasets: [{\n          label: `Quantity Over Time for ${supplyName}`,\n          data: quantities,\n          backgroundColor: 'green',\n          borderColor: 'green',\n          borderWidth: 1\n        }]\n      });\n      setSupplyName1(supplyName);\n    }).catch(error => {\n      // console.error('Error fetching data:', error);\n    });\n  };\n  useEffect(s, []);\n  function t() {\n    lineData = {\n      labels: labels,\n      datasets: [{\n        label: `Quantity Over Time for ${supplyName}`,\n        data: quantities,\n        backgroundColor: 'green',\n        borderColor: 'green',\n        borderWidth: 1\n      }]\n    };\n  }\n\n  // Options for the bar chart\n  const options = {\n    scales: {\n      y: {\n        beginAtZero: true\n      }\n    }\n  };\n  const changeSupplyName = async function (params) {\n    setSupplyName(params.target.value);\n    await s();\n    console.log(supplyName);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      style: {\n        fontWeight: 600,\n        fontSize: \"1.5em\",\n        marginBottom: \"2em\"\n      },\n      children: [\"Quantity Over Time for \", supplyName]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Line, {\n      data: lineData\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"supply-name\",\n        children: \"Supply Name: \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n        value: supplyName1,\n        onChange: changeSupplyName,\n        class: \"block w-full px-4 py-2 text-sm text-gray-700 bg-white border border-gray-300 rounded-md shadow-sm focus:outline-none focus:ring-2 focus:ring-indigo-500 focus:border-indigo-500\",\n        children: [/*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"Epoetin\",\n          children: \"Item 1\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 100,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"Walkers\",\n          children: \"Item 2\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 101,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"Blood Glucose Monitors\",\n          children: \"Item 3\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 102,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 94,\n    columnNumber: 9\n  }, this);\n}\nexport default QuantityOverTime;","map":{"version":3,"names":["React","useEffect","useState","Line","jsxDEV","_jsxDEV","QuantityOverTime","labels","setLabels","quantities","setQuantities","data","setData","supplyName","setSupplyName","supplyName1","setSupplyName1","lineData","setLineData","datasets","label","backgroundColor","borderColor","borderWidth","s","fetch","then","response","ok","Error","status","json","newLabels","map","item","_id","newQuantities","total_quantity","catch","error","t","options","scales","y","beginAtZero","changeSupplyName","params","target","value","console","log","children","style","fontWeight","fontSize","marginBottom","fileName","_jsxFileName","lineNumber","columnNumber","htmlFor","onChange","class"],"sources":["/Users/jarvis/Library/CloudStorage/OneDrive-IndianaUniversity/sem2/ADT/finalproject/react/Frontend/src/components/QuantityOverTime.js"],"sourcesContent":["\nimport React, { useEffect, useState } from 'react';\nimport { Line } from 'react-chartjs-2';\n\nfunction QuantityOverTime() {\n    const [labels, setLabels] = useState([]);\n    const [quantities, setQuantities] = useState([]);\n    const [data, setData] = useState(null);\n    const [supplyName, setSupplyName] = useState('Epoetin');\n    const [supplyName1, setSupplyName1] = useState('Epoetin');\n    const [lineData, setLineData] = useState({\n        labels: labels,\n        datasets: [\n            {\n                label: `Quantity Over Time for ${supplyName}`,\n                data: quantities,\n                backgroundColor: 'green',\n                borderColor: 'green',\n                borderWidth: 1,\n            },\n        ],\n    })\n    const s = ()=>{\n        // Fetch data from the API\n        fetch(`http://localhost:4012/api/supplies/quantity-over-time?supplyName=${supplyName}`)\n            .then(response => {\n                if (!response.ok) {\n                    // console.log(\"error\",response)\n                    throw new Error(`HTTP error! Status: ${response.status}`);\n                }\n                // console.log(\"success\",response)\n                return response.json();\n            })\n            .then(data => {\n                // Extract labels and quantities from the response data\n                const newLabels = data.map(item => item._id);\n                const newQuantities = data.map(item => item.total_quantity);\n\n                // Update state variables\n                setLabels(newLabels);\n                setQuantities(newQuantities);\n                setLineData({\n                    labels: labels,\n                    datasets: [\n                        {\n                            label: `Quantity Over Time for ${supplyName}`,\n                            data: quantities,\n                            backgroundColor: 'green',\n                            borderColor: 'green',\n                            borderWidth: 1,\n                        },\n                    ],\n                })\n                setSupplyName1(supplyName)\n            })\n            .catch(error => {\n                // console.error('Error fetching data:', error);\n            });\n    }\n    useEffect(s,[]);\n    \n    function t() {\n         lineData={\n        labels: labels,\n        datasets: [\n            {\n                label: `Quantity Over Time for ${supplyName}`,\n                data: quantities,\n                backgroundColor: 'green',\n                borderColor: 'green',\n                borderWidth: 1,\n            },\n        ],\n    };}\n\n    // Options for the bar chart\n    const options = {\n        scales: {\n            y: {\n                beginAtZero: true,\n            },\n        },\n    };\n\n\n    const changeSupplyName= async function (params) {\n        setSupplyName(params.target.value)\n        await s();\n        console.log(supplyName);\n    }\n    \n\n    return (\n        <div>\n            <h2 style={{fontWeight:600, fontSize:\"1.5em\", marginBottom:\"2em\"}}>Quantity Over Time for {supplyName}</h2>\n            <Line data={lineData} />\n            <div>\n                <label htmlFor=\"supply-name\">Supply Name: </label>\n                <select value={supplyName1} onChange={changeSupplyName} class=\"block w-full px-4 py-2 text-sm text-gray-700 bg-white border border-gray-300 rounded-md shadow-sm focus:outline-none focus:ring-2 focus:ring-indigo-500 focus:border-indigo-500\">\n                    <option value=\"Epoetin\">Item 1</option>\n                    <option value=\"Walkers\">Item 2</option>\n                    <option value=\"Blood Glucose Monitors\">Item 3</option>\n                </select>\n            </div>\n        </div>\n    );\n}\n\nexport default QuantityOverTime;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}